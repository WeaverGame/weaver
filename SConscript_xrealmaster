import os, string, sys

Import('env')

xrealmaster_src = [
'code/master/master.c',
'code/master/messages.c',
'code/master/servers.c'
]

xrealmaster_env = env.Clone()

if env['arch'] == 'linux-i386':
	xrealmaster_env.Append(LIBS=['m'])
	xrealmaster_env.Program('xrealmaster', xrealmaster_src)
	xrealmaster_env.InstallAs('#xrealmaster.i386', 'xrealmaster')
	
elif env['arch'] == 'linux-x86_64':
	xrealmaster_env.Append(LIBS=['m'])
	xrealmaster_env.Program('xrealmaster', xrealmaster_src)
	xrealmaster_env.InstallAs('#xrealmaster.x86_64', 'xrealmaster')

elif env['arch'] == 'netbsd-i386':
	xrealmaster_env.Append(LIBS=['m'])
	xrealmaster_env.Program('xrealmaster', xrealmaster_src)
	xrealmaster_env.InstallAs('#xrealmaster.i386', 'xrealmaster')

elif env['arch'] == 'freebsd-i386':
	xrealmaster_env.Append(LIBS=['m'])
	xrealmaster_env.Program('xrealmaster', xrealmaster_src)
	xrealmaster_env.InstallAs('#xrealmaster.i386', 'xrealmaster')

elif env['arch'] == 'win32-mingw':
	xrealmaster_env.Append(LIBS=['m', 'wsock32'])
	xrealmaster_env.Program('xrealmaster', xrealmaster_src)
	xrealmaster_env.Install('#', 'xrealmaster.exe')
